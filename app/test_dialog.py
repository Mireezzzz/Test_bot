from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import (Group, Radio, Row, Next, Back,
                                        SwitchTo, Cancel, ManagedRadio, Button)
from aiogram_dialog.widgets.text import List
from aiogram_dialog.widgets.common import Whenable
from aiogram.types import CallbackQuery

from typing import Dict

from app.states import Test


# –ì–µ—Ç—Ç–µ—Ä—ã, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
async def get_answer_1(dialog_manager: DialogManager, **kwargs):
    radio: ManagedRadio = dialog_manager.find("question_1")
    return {"answer_1": radio.get_checked()}


async def get_answer_2(dialog_manager: DialogManager, **kwargs):
    radio: ManagedRadio = dialog_manager.find("question_2")
    return {"answer_2": radio.get_checked()}


async def get_answer_3(dialog_manager: DialogManager, **kwargs):
    radio: ManagedRadio = dialog_manager.find("question_3")
    return {"answer_3": radio.get_checked()}


async def get_answer_4(dialog_manager: DialogManager, **kwargs):
    radio: ManagedRadio = dialog_manager.find("question_4")
    return {"answer_4": radio.get_checked()}


async def get_answer_5(dialog_manager: DialogManager, **kwargs):
    radio: ManagedRadio = dialog_manager.find("question_5")
    return {"answer_5": radio.get_checked()}


# –ì–µ—Ç—Ç–µ—Ä, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def get_all_answers(dialog_manager: DialogManager, **kwargs):
    answers = []
    for i in range(1, 6):
        radio: ManagedRadio = dialog_manager.find(f"question_{i}")
        answer = radio.get_checked()
        answers.append((i, answer))
    return {"answers": answers}


# –ì–µ—Ç—Ç–µ—Ä, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ –æ—Ü–µ–Ω–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def get_correct_answers(dialog_manager: DialogManager, **kwargs):
    result = []
    cnt = 0
    correct_answers = ['8', "120", "12", '7', "256"]
    for i in range(1, 6):
        radio: ManagedRadio = dialog_manager.find(f"question_{i}")
        answer = radio.get_checked()
        if correct_answers[i - 1] == answer:
            cnt += 1
            result.append((i, "‚úÖ"))
        else:
            result.append((i, "‚ùå"))
    dialog_manager.dialog_data["grade"] = str(cnt)
    return {"correct_answers": result,
            "grade": str(cnt)}


# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–µ–∂–∏–º, –∫–æ–≥–¥–∞ –¥–∞–Ω—ã –≤—Å–µ –æ—Ç–≤–µ—Ç—ã
async def set_show_buttons(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    dialog_manager.dialog_data["show_buttons"] = True


# –ë–ª–∞–≥–æ–¥–∞—Ä–∏—Ç –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
async def on_click_result(callback: CallbackQuery, button: Button, dialog_manager: DialogManager):
    await callback.message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!")
    grade = dialog_manager.dialog_data["grade"]
    name = callback.from_user.first_name
    message = f"{name} –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç –Ω–∞ {grade}/5"
    await callback.bot.send_message(chat_id=1122109464, text=message)


# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–æ–≥–¥–∞ –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
def show_buttons(data: Dict, widget: Whenable, dialog_manager: DialogManager):
    return dialog_manager.dialog_data.get("show_buttons", False)


test_dialog = Dialog(
    # –í–æ–ø—Ä–æ—Å 1
    Window(
        Const("–í–æ–ø—Ä–æ—Å 1:\n"
              "2^3 = ?"),
        Group(
            Radio(
                checked_text=Format("üîò {item}"),
                unchecked_text=Format("‚ö™Ô∏è {item}"),
                id="question_1",
                items=['4', '6', '8', '10'],
                item_id_getter=lambda x: x,
            ),
            width=2,
        ),
        Group(
            Row(
                Next(Const("            ‚ñ∂           "), when="answer_1")
            ),
            Row(
                SwitchTo(Const("[1]"), id="switch_to_one", state=Test.question_1),
                SwitchTo(Const("2"), id="switch_to_two", state=Test.question_2),
                SwitchTo(Const("3"), id="switch_to_three", state=Test.question_3),
                SwitchTo(Const("4"), id="switch_to_four", state=Test.question_4),
                SwitchTo(Const("5"), id="switch_to_five", state=Test.question_5),
                when=show_buttons,
            ),
            SwitchTo(Const("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã"), id="switch_to_change_result", state=Test.change_result, when=show_buttons),
        ),
        getter=get_answer_1,
        state=Test.question_1,
    ),
    # –í–æ–ø—Ä–æ—Å 2
    Window(
        Const("–í–æ–ø—Ä–æ—Å 2:\n"
              "5! = ?"),
        Group(
            Radio(
                checked_text=Format("üîò {item}"),
                unchecked_text=Format("‚ö™Ô∏è {item}"),
                id="question_2",
                items=['110', '115', '120', '125'],
                item_id_getter=lambda x: x,
            ),
            width=2,
        ),

        Group(
            Row(
                Back(Const("            ‚óÄ           ")),
                Next(Const("            ‚ñ∂           "), when="answer_2"),
            ),
            Row(
                SwitchTo(Const("1"), id="switch_to_one", state=Test.question_1),
                SwitchTo(Const("[2]"), id="switch_to_two", state=Test.question_2),
                SwitchTo(Const("3"), id="switch_to_three", state=Test.question_3),
                SwitchTo(Const("4"), id="switch_to_four", state=Test.question_4),
                SwitchTo(Const("5"), id="switch_to_five", state=Test.question_5),
                when=show_buttons,
            ),
            SwitchTo(Const("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã"), id="switch_to_change_result", state=Test.change_result, when=show_buttons),
        ),
        getter=get_answer_2,
        state=Test.question_2,
    ),
    # –í–æ–ø—Ä–æ—Å 3
    Window(
        Const("–í–æ–ø—Ä–æ—Å 3:\n"
              "3 + 3 * 3 = ?"),
        Group(
            Radio(
                checked_text=Format("üîò {item}"),
                unchecked_text=Format("‚ö™Ô∏è {item}"),
                id="question_3",
                items=["81", "27", "12", "9"],
                item_id_getter=lambda x: x,
            ),
            width=2,
        ),

        Group(
            Row(
                Back(Const("            ‚óÄ           ")),
                Next(Const("            ‚ñ∂           "), when="answer_3"),
            ),
            Row(
                SwitchTo(Const("1"), id="switch_to_one", state=Test.question_1),
                SwitchTo(Const("2"), id="switch_to_two", state=Test.question_2),
                SwitchTo(Const("[3]"), id="switch_to_three", state=Test.question_3),
                SwitchTo(Const("4"), id="switch_to_four", state=Test.question_4),
                SwitchTo(Const("5"), id="switch_to_five", state=Test.question_5),
                when=show_buttons,
            ),
            SwitchTo(Const("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã"), id="switch_to_change_result", state=Test.change_result, when=show_buttons),
        ),
        getter=get_answer_3,
        state=Test.question_3,
    ),
    # –í–æ–ø—Ä–æ—Å 4
    Window(
        Const("–í–æ–ø—Ä–æ—Å 4:\n"
              "log128 = ?"),
        Group(
            Radio(
                checked_text=Format("üîò {item}"),
                unchecked_text=Format("‚ö™Ô∏è {item}"),
                id="question_4",
                items=['5', '6', '7', '8'],
                item_id_getter=lambda x: x,
            ),
            width=2,
        ),

        Group(
            Row(
                Back(Const("            ‚óÄ           ")),
                Next(Const("            ‚ñ∂           "), when="answer_4"),
            ),
            Row(
                SwitchTo(Const("1"), id="switch_to_one", state=Test.question_1),
                SwitchTo(Const("2"), id="switch_to_two", state=Test.question_2),
                SwitchTo(Const("3"), id="switch_to_three", state=Test.question_3),
                SwitchTo(Const("[4]"), id="switch_to_four", state=Test.question_4),
                SwitchTo(Const("5"), id="switch_to_five", state=Test.question_5),
                when=show_buttons,
            ),
            SwitchTo(Const("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã"), id="switch_to_change_result", state=Test.change_result, when=show_buttons),
        ),
        getter=get_answer_4,
        state=Test.question_4,
    ),
    # –í–æ–ø—Ä–æ—Å 5
    Window(
        Const("–í–æ–ø—Ä–æ—Å 5:\n"
              "16 * 16 = ?"),
        Group(
            Radio(
                checked_text=Format("üîò {item}"),
                unchecked_text=Format("‚ö™Ô∏è {item}"),
                id="question_5",
                items=['121', '144', '225', '256'],
                item_id_getter=lambda x: x,
            ),
            width=2,
        ),

        Group(
            Row(
                Back(Const("            ‚óÄ           ")),
                Next(Const("            ‚ñ∂           "), when="answer_5", on_click=set_show_buttons),
            ),
            Row(
                SwitchTo(Const("1"), id="switch_to_one", state=Test.question_1),
                SwitchTo(Const("2"), id="switch_to_two", state=Test.question_2),
                SwitchTo(Const("3"), id="switch_to_three", state=Test.question_3),
                SwitchTo(Const("4"), id="switch_to_four", state=Test.question_4),
                SwitchTo(Const("[5]"), id="switch_to_five", state=Test.question_5),
                when=show_buttons,
            ),
            SwitchTo(Const("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã"), id="switch_to_change_result", state=Test.change_result, when=show_buttons),
        ),
        getter=get_answer_5,
        state=Test.question_5,
    ),
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
    Window(
        Const("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã, –∏ –µ—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã'"),
        List(
            field=Format("{item[0]}. –û—Ç–≤–µ—Ç: {item[1]}"),
            items="answers",
        ),
        Next(Const("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã")),
        Row(
            SwitchTo(Const("1"), id="switch_to_one", state=Test.question_1),
            SwitchTo(Const("2"), id="switch_to_two", state=Test.question_2),
            SwitchTo(Const("3"), id="switch_to_three", state=Test.question_3),
            SwitchTo(Const("4"), id="switch_to_four", state=Test.question_4),
            SwitchTo(Const("5"), id="switch_to_five", state=Test.question_5),
        ),
        getter=get_all_answers,
        state=Test.change_result,
    ),
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    Window(
        Format("–¢–≤–æ—è –æ—Ü–µ–Ω–∫–∞: {grade}/5"),
        List(
            field=Format("{item[0]}. {item[1]}"),
            items="correct_answers",
        ),
        Cancel(Const("–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"), on_click=on_click_result),
        getter=get_correct_answers,
        state=Test.result,
    ),
)
